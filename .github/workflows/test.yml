name: DCS Tests

on:
# Commented out in favor of all testing done on pull requests, not pushes as already should be tested
#  push:
#    branches:
#      - master
#      - develop
#      - release-*
#      - sandbox-*
#  pull_request:
#    branches:
#      - master
#      - develop
#      - release-*
  push:
    branches:
      - '!master'
      - '!release/dcs/v*'
  pull_request:
    branches:
      - '**'

jobs:
  test:
    name: Build & Test DCS
    runs-on: ubuntu-latest
    env:
      GOPATH: /home/runner/work/dcs/dcs/go
      RELATIVE_GITEA_ROOT: go/src/code.gitea.io/gitea
      GITEA_ROOT: /home/runner/work/dcs/dcs/go/src/code.gitea.io/gitea
      GOPROXY: off
      GOSUMDB: sum.golang.org
      TAGS: bindata sqlite sqlite_unlock_notify
      TEST_LDAP: 0

    steps:
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: ${{ env.RELATIVE_GITEA_ROOT }}
          fetch-depth: 0
          lfs: true

      - name: Debug - pre-build
        shell: bash
        run: |
          pwd
          go version
          ls -l ${GOPATH}
          ls -l ${GITEA_ROOT}

      - name: Setup node
        if: always()
        uses: actions/setup-node@v1
        with:
          node-version: 10.x

      - name: Make css and js with node
        shell: bash
        run: |
          make css
          make js
        working-directory: ${{ env.GITEA_ROOT }}

      - name: Fetch tags
        shell: bash
        run: git fetch --tags --force
        working-directory: ${{ env.GITEA_ROOT }}

      - name: Build gitea binary
        shell: bash
        run: make build
        working-directory: ${{ env.GITEA_ROOT }}

      - name: Build without GCC
        shell: bash
        run: go build -mod=vendor -o gitea_no_gcc # test if build succeeds without the sqlite tag
        env:
          GO111MODULE: on
        working-directory: ${{ env.GITEA_ROOT }}

      - name: Debug - post-build
        shell: bash
        run: ls -l ${GITEA_ROOT}

      - name: tag-pre-condition
        shell: bash
        run: git update-ref refs/heads/tag_test ${GITHUB_SHA}
        working-directory: ${{ env.GITEA_ROOT }}

      - name: Swagger
        shell: bash
        run: |
          make swagger-check
          make swagger-validate
        env:
          GOPROXY: https://proxy.golang.org
        working-directory: ${{ env.GITEA_ROOT }}

      - name: GolangCI-Linter
        uses: Mushus/golangci-linter@v1.1.2
        with:
          basePath: ${{ env.GITEA_ROOT }}

      - name: Revive
        uses: morphy2k/revive-action@v1.3.1
        with:
          path: ${{ env.GITEA_ROOT }}

      - name: Test Vendor
        shell: bash
        run: make test-vendor
        env:
          GOPROXY: https://proxy.golang.org
        working-directory: ${{ env.GITEA_ROOT }}

      - name: Unit Tests
        shell: bash
        run: make unit-test-coverage
        working-directory: ${{ env.GITEA_ROOT }}

      - name: Test SQLite
        shell: bash
        run: |
          make test-sqlite-migration
          make test-sqlite
        working-directory: ${{ env.GITEA_ROOT }}

      - name: Setup MySQL Test DBs
        shell: bash
        run: |
          mysqladmin -u root -proot password ''
          mysql -e 'CREATE DATABASE gitea; CREATE DATABASE test; CREATE DATABASE testgitea;' -u root
          mysql -e 'show databases;' -u root

      - name: Test MySQL
        shell: bash
        run: |
          sudo echo "127.0.0.1  mysql" | sudo tee -a /etc/hosts
          make test-mysql
          make integration-test-coverage
        working-directory: ${{ env.GITEA_ROOT }}
